{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\www\\\\gits-proyectos\\\\proyecto ERP\\\\ERP V-2\\\\ssr_server\\\\public\\\\src\\\\pages\\\\containers\\\\home.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Map as map } from 'immutable';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../../actions/index.js';\nimport HandleErrorContainer from '../../components/error/container/handle-error.js';\nimport HomeComponent from '../components/home';\n\nvar Home = /*#__PURE__*/function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {//agent: this.props.agent //THIS should update the view when a new agent is created\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"logout\", function (value) {\n      _this.props.actions.removeUserAccess();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubscriptionChange\", function (dataSource) {\n      _this.setState({\n        subscribedValue: dataSource.value\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//this.props.actions.createBurnAgent('yyy-yyy-yyy', 'rss');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var newMessage = this.props.userMessage && 'nuevo Mensaje: ' + this.props.userMessage;\n      return __jsx(HandleErrorContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, __jsx(HomeComponent, {\n        message: this.props.message,\n        showSpinner: this.props.showSpinner,\n        access: this.props.access,\n        logout: this.logout,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nfunction mapStateToProps(state, props) {\n  var message = state.get('data').get('message');\n  var userMessage = state.get('data').get('userMessage');\n  var agent = state.get('agent');\n  var showSpinner = state.get('spinner').get('showSpinner');\n  var access = state.get('user').get('access');\n\n  if (access.size > 0 && access.get('access_granted') == true) {\n    access = true;\n  } else {\n    access = false;\n  }\n\n  return {\n    message: message,\n    userMessage: userMessage,\n    agent: agent,\n    showSpinner: showSpinner,\n    access: access\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["D:/www/gits-proyectos/proyecto ERP/ERP V-2/ssr_server/public/src/pages/containers/home.js"],"names":["React","Component","connect","Map","map","bindActionCreators","actions","HandleErrorContainer","HomeComponent","Home","value","props","removeUserAccess","dataSource","setState","subscribedValue","newMessage","userMessage","message","showSpinner","access","logout","mapStateToProps","state","get","agent","size","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAG,IAAIC,GAAhB,QAA2B,WAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AAEA,OAAOC,oBAAP,MAAiC,kDAAjC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;IAEMC,I;;;;;;;;;;;;;;;;4DACM,CACJ;AADI,K;;6DAMC,UAAAC,KAAK,EAAI;AACd,YAAKC,KAAL,CAAWL,OAAX,CAAmBM,gBAAnB;AACH,K;;+EAe0B,UAAAC,UAAU,EAAI;AACrC,YAAKC,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEF,UAAU,CAACH;AADlB,OAAd;AAGH,K;;;;;;;wCAxBmB,CAChB;AACH;;;6BAIQ;AACL,UAAIM,UAAU,GAAI,KAAKL,KAAL,CAAWM,WAAZ,IAA4B,oBAAoB,KAAKN,KAAL,CAAWM,WAA5E;AACA,aACI,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,aAAD;AACI,QAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OADxB;AAEI,QAAA,WAAW,EAAE,KAAKP,KAAL,CAAWQ,WAF5B;AAGI,QAAA,MAAM,EAAE,KAAKR,KAAL,CAAWS,MAHvB;AAII,QAAA,MAAM,EAAE,KAAKC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAUH;;;;EAtBcpB,S;;AA+BnB,SAASqB,eAAT,CAAyBC,KAAzB,EAAgCZ,KAAhC,EAAuC;AACnC,MAAIO,OAAO,GAAGK,KAAK,CAACC,GAAN,CAAU,MAAV,EAAkBA,GAAlB,CAAsB,SAAtB,CAAd;AACA,MAAIP,WAAW,GAAGM,KAAK,CAACC,GAAN,CAAU,MAAV,EAAkBA,GAAlB,CAAsB,aAAtB,CAAlB;AACA,MAAIC,KAAK,GAAGF,KAAK,CAACC,GAAN,CAAU,OAAV,CAAZ;AACA,MAAIL,WAAW,GAAGI,KAAK,CAACC,GAAN,CAAU,SAAV,EAAqBA,GAArB,CAAyB,aAAzB,CAAlB;AACA,MAAIJ,MAAM,GAAGG,KAAK,CAACC,GAAN,CAAU,MAAV,EAAkBA,GAAlB,CAAsB,QAAtB,CAAb;;AACA,MAAIJ,MAAM,CAACM,IAAP,GAAc,CAAd,IAAmBN,MAAM,CAACI,GAAP,CAAW,gBAAX,KAAgC,IAAvD,EAA6D;AACzDJ,IAAAA,MAAM,GAAG,IAAT;AACH,GAFD,MAEO;AACHA,IAAAA,MAAM,GAAG,KAAT;AACH;;AACD,SAAO;AACHF,IAAAA,OAAO,EAAPA,OADG;AAEHD,IAAAA,WAAW,EAAXA,WAFG;AAGHQ,IAAAA,KAAK,EAALA,KAHG;AAIHN,IAAAA,WAAW,EAAXA,WAJG;AAKHC,IAAAA,MAAM,EAANA;AALG,GAAP;AAOH;;AAED,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHtB,IAAAA,OAAO,EAAED,kBAAkB,CAACC,OAAD,EAAUsB,QAAV;AADxB,GAAP;AAGH;;AAED,eAAe1B,OAAO,CAACoB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6ClB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Map as map } from 'immutable';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../../actions/index.js';\r\n\r\nimport HandleErrorContainer from '../../components/error/container/handle-error.js';\r\nimport HomeComponent from '../components/home';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        //agent: this.props.agent //THIS should update the view when a new agent is created\r\n    }\r\n    componentDidMount() {\r\n        //this.props.actions.createBurnAgent('yyy-yyy-yyy', 'rss');\r\n    }\r\n    logout = value => {\r\n        this.props.actions.removeUserAccess();\r\n    }\r\n    render() {\r\n        let newMessage = (this.props.userMessage) && 'nuevo Mensaje: ' + this.props.userMessage;\r\n        return (\r\n            <HandleErrorContainer>\r\n                <HomeComponent\r\n                    message={this.props.message}\r\n                    showSpinner={this.props.showSpinner}\r\n                    access={this.props.access}\r\n                    logout={this.logout}\r\n                />\r\n            </HandleErrorContainer>\r\n        )\r\n    }\r\n\r\n    handleSubscriptionChange = dataSource => {\r\n        this.setState({\r\n            subscribedValue: dataSource.value,\r\n        });\r\n    };\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n    let message = state.get('data').get('message');\r\n    let userMessage = state.get('data').get('userMessage');\r\n    let agent = state.get('agent');\r\n    let showSpinner = state.get('spinner').get('showSpinner');\r\n    let access = state.get('user').get('access');\r\n    if (access.size > 0 && access.get('access_granted') == true) {\r\n        access = true;\r\n    } else {\r\n        access = false;\r\n    }\r\n    return {\r\n        message,\r\n        userMessage,\r\n        agent,\r\n        showSpinner,\r\n        access\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}