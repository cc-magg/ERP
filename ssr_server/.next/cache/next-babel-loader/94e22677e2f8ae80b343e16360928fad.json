{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\gits-proyectos\\\\proyecto ERP\\\\ERP V-2\\\\ssr_server\\\\public\\\\src\\\\pages\\\\containers\\\\home.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Map as map } from 'immutable';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../../actions/index.js';\nimport HandleErrorContainer from '../../components/error/container/handle-error.js';\nimport HomeComponent from '../components/home';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {//agent: this.props.agent //THIS should update the view when a new agent is created\n    });\n\n    _defineProperty(this, \"logout\", value => {\n      this.props.actions.removeUserAccess();\n    });\n\n    _defineProperty(this, \"handleSubscriptionChange\", dataSource => {\n      this.setState({\n        subscribedValue: dataSource.value\n      });\n    });\n  }\n\n  componentDidMount() {//this.props.actions.createBurnAgent('yyy-yyy-yyy', 'rss');\n  }\n\n  render() {\n    let newMessage = this.props.userMessage && 'nuevo Mensaje: ' + this.props.userMessage;\n    return __jsx(HandleErrorContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, __jsx(HomeComponent, {\n      message: this.props.message,\n      showSpinner: this.props.showSpinner,\n      access: this.props.access,\n      logout: this.logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nfunction mapStateToProps(state, props) {\n  let message = state.get('data').get('message');\n  let userMessage = state.get('data').get('userMessage');\n  let agent = state.get('agent');\n  let showSpinner = state.get('spinner').get('showSpinner');\n  let access = state.get('user').get('access');\n\n  if (access.size > 0 && access.get('access_granted') == true) {\n    access = true;\n  } else {\n    access = false;\n  }\n\n  return {\n    message,\n    userMessage,\n    agent,\n    showSpinner,\n    access\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["D:/www/gits-proyectos/proyecto ERP/ERP V-2/ssr_server/public/src/pages/containers/home.js"],"names":["React","Component","connect","Map","map","bindActionCreators","actions","HandleErrorContainer","HomeComponent","Home","value","props","removeUserAccess","dataSource","setState","subscribedValue","componentDidMount","render","newMessage","userMessage","message","showSpinner","access","logout","mapStateToProps","state","get","agent","size","mapDispatchToProps","dispatch"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAG,IAAIC,GAAhB,QAA2B,WAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,wBAAzB;AAEA,OAAOC,oBAAP,MAAiC,kDAAjC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAAA;AAAA;;AAAA,mCACjB,CACJ;AADI,KADiB;;AAAA,oCAOhBS,KAAK,IAAI;AACd,WAAKC,KAAL,CAAWL,OAAX,CAAmBM,gBAAnB;AACH,KATwB;;AAAA,sDAwBEC,UAAU,IAAI;AACrC,WAAKC,QAAL,CAAc;AACVC,QAAAA,eAAe,EAAEF,UAAU,CAACH;AADlB,OAAd;AAGH,KA5BwB;AAAA;;AAIzBM,EAAAA,iBAAiB,GAAG,CAChB;AACH;;AAIDC,EAAAA,MAAM,GAAG;AACL,QAAIC,UAAU,GAAI,KAAKP,KAAL,CAAWQ,WAAZ,IAA4B,oBAAoB,KAAKR,KAAL,CAAWQ,WAA5E;AACA,WACI,MAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,aAAD;AACI,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,OADxB;AAEI,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWU,WAF5B;AAGI,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWW,MAHvB;AAII,MAAA,MAAM,EAAE,KAAKC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAUH;;AAtBwB;;AA+B7B,SAASC,eAAT,CAAyBC,KAAzB,EAAgCd,KAAhC,EAAuC;AACnC,MAAIS,OAAO,GAAGK,KAAK,CAACC,GAAN,CAAU,MAAV,EAAkBA,GAAlB,CAAsB,SAAtB,CAAd;AACA,MAAIP,WAAW,GAAGM,KAAK,CAACC,GAAN,CAAU,MAAV,EAAkBA,GAAlB,CAAsB,aAAtB,CAAlB;AACA,MAAIC,KAAK,GAAGF,KAAK,CAACC,GAAN,CAAU,OAAV,CAAZ;AACA,MAAIL,WAAW,GAAGI,KAAK,CAACC,GAAN,CAAU,SAAV,EAAqBA,GAArB,CAAyB,aAAzB,CAAlB;AACA,MAAIJ,MAAM,GAAGG,KAAK,CAACC,GAAN,CAAU,MAAV,EAAkBA,GAAlB,CAAsB,QAAtB,CAAb;;AACA,MAAIJ,MAAM,CAACM,IAAP,GAAc,CAAd,IAAmBN,MAAM,CAACI,GAAP,CAAW,gBAAX,KAAgC,IAAvD,EAA6D;AACzDJ,IAAAA,MAAM,GAAG,IAAT;AACH,GAFD,MAEO;AACHA,IAAAA,MAAM,GAAG,KAAT;AACH;;AACD,SAAO;AACHF,IAAAA,OADG;AAEHD,IAAAA,WAFG;AAGHQ,IAAAA,KAHG;AAIHN,IAAAA,WAJG;AAKHC,IAAAA;AALG,GAAP;AAOH;;AAED,SAASO,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHxB,IAAAA,OAAO,EAAED,kBAAkB,CAACC,OAAD,EAAUwB,QAAV;AADxB,GAAP;AAGH;;AAED,eAAe5B,OAAO,CAACsB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CpB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Map as map } from 'immutable';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../../actions/index.js';\r\n\r\nimport HandleErrorContainer from '../../components/error/container/handle-error.js';\r\nimport HomeComponent from '../components/home';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        //agent: this.props.agent //THIS should update the view when a new agent is created\r\n    }\r\n    componentDidMount() {\r\n        //this.props.actions.createBurnAgent('yyy-yyy-yyy', 'rss');\r\n    }\r\n    logout = value => {\r\n        this.props.actions.removeUserAccess();\r\n    }\r\n    render() {\r\n        let newMessage = (this.props.userMessage) && 'nuevo Mensaje: ' + this.props.userMessage;\r\n        return (\r\n            <HandleErrorContainer>\r\n                <HomeComponent\r\n                    message={this.props.message}\r\n                    showSpinner={this.props.showSpinner}\r\n                    access={this.props.access}\r\n                    logout={this.logout}\r\n                />\r\n            </HandleErrorContainer>\r\n        )\r\n    }\r\n\r\n    handleSubscriptionChange = dataSource => {\r\n        this.setState({\r\n            subscribedValue: dataSource.value,\r\n        });\r\n    };\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n    let message = state.get('data').get('message');\r\n    let userMessage = state.get('data').get('userMessage');\r\n    let agent = state.get('agent');\r\n    let showSpinner = state.get('spinner').get('showSpinner');\r\n    let access = state.get('user').get('access');\r\n    if (access.size > 0 && access.get('access_granted') == true) {\r\n        access = true;\r\n    } else {\r\n        access = false;\r\n    }\r\n    return {\r\n        message,\r\n        userMessage,\r\n        agent,\r\n        showSpinner,\r\n        access\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);"]},"metadata":{},"sourceType":"module"}