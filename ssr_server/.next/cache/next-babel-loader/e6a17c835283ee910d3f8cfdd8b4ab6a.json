{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\gits-proyectos\\\\proyecto ERP\\\\ERP V-2\\\\ssr_server\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { initStore } from '../store';\nimport Router from 'next/router';\nimport { Map as map } from 'immutable';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../public/src/actions/index';\nimport { LocalStorageCheckForThis, LocalStorageGetData, LocalStorageRemoveItem } from '../localStorageOptions';\nimport LoginPage from '../public/src/pages/containers/login';\n\nclass Login extends Component {\n  //aqui no hacemos validaciones de sesion (cookie auth) por que a esta vista se puede entrar sin estar autenticado\n  componentDidMount() {\n    //navegation Events\n    Router.onRouteChangeStart = url => {\n      console.log('App is changing to: ', url);\n      this.props.actions.showSpinner(true);\n    };\n\n    Router.onRouteChangeComplete = url => {\n      console.log('App changed to: ', url);\n      this.props.actions.showSpinner(false);\n    };\n  }\n\n  render() {\n    return __jsx(LoginPage, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nfunction mapStateToProps(state, props) {\n  return {\n    state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}\n\nexport default initStore(Login, mapStateToProps, mapDispatchToProps, 'LOGIN');","map":{"version":3,"sources":["D:/www/gits-proyectos/proyecto ERP/ERP V-2/ssr_server/pages/login.js"],"names":["React","Component","initStore","Router","Map","map","bindActionCreators","actions","LocalStorageCheckForThis","LocalStorageGetData","LocalStorageRemoveItem","LoginPage","Login","componentDidMount","onRouteChangeStart","url","console","log","props","showSpinner","onRouteChangeComplete","render","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,GAAG,IAAIC,GAAhB,QAA2B,WAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SACIC,wBADJ,EAEIC,mBAFJ,EAGIC,sBAHJ,QAIO,wBAJP;AAMA,OAAOC,SAAP,MAAsB,sCAAtB;;AAEA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAC1B;AACAY,EAAAA,iBAAiB,GAAG;AAChB;AACAV,IAAAA,MAAM,CAACW,kBAAP,GAA4BC,GAAG,IAAI;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;AACA,WAAKG,KAAL,CAAWX,OAAX,CAAmBY,WAAnB,CAA+B,IAA/B;AACH,KAHD;;AAIAhB,IAAAA,MAAM,CAACiB,qBAAP,GAA+BL,GAAG,IAAI;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;AACA,WAAKG,KAAL,CAAWX,OAAX,CAAmBY,WAAnB,CAA+B,KAA/B;AACH,KAHD;AAIH;;AACDE,EAAAA,MAAM,GAAG;AACL,WAAQ,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACH;;AAfyB;;AAkB9B,SAASC,eAAT,CAAyBC,KAAzB,EAAgCL,KAAhC,EAAuC;AACnC,SAAO;AACHK,IAAAA;AADG,GAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHlB,IAAAA,OAAO,EAAED,kBAAkB,CAACC,OAAD,EAAUkB,QAAV;AADxB,GAAP;AAGH;;AAED,eAAevB,SAAS,CAACU,KAAD,EAAQU,eAAR,EAAyBE,kBAAzB,EAA6C,OAA7C,CAAxB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { initStore } from '../store';\r\nimport Router from 'next/router';\r\nimport { Map as map } from 'immutable';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../public/src/actions/index';\r\nimport {\r\n    LocalStorageCheckForThis,\r\n    LocalStorageGetData,\r\n    LocalStorageRemoveItem\r\n} from '../localStorageOptions';\r\n\r\nimport LoginPage from '../public/src/pages/containers/login';\r\n\r\nclass Login extends Component {\r\n    //aqui no hacemos validaciones de sesion (cookie auth) por que a esta vista se puede entrar sin estar autenticado\r\n    componentDidMount() {\r\n        //navegation Events\r\n        Router.onRouteChangeStart = url => {\r\n            console.log('App is changing to: ', url);\r\n            this.props.actions.showSpinner(true);\r\n        }\r\n        Router.onRouteChangeComplete = url => {\r\n            console.log('App changed to: ', url);\r\n            this.props.actions.showSpinner(false);\r\n        }\r\n    }\r\n    render() {\r\n        return (<LoginPage />)\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n        state\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    }\r\n}\r\n\r\nexport default initStore(Login, mapStateToProps, mapDispatchToProps, 'LOGIN')"]},"metadata":{},"sourceType":"module"}