{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\www\\\\gits-proyectos\\\\proyecto ERP\\\\ERP V-2\\\\ssr_server\\\\pages\\\\login.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { initStore } from '../store';\nimport Router from 'next/router';\nimport { Map as map } from 'immutable';\nimport { bindActionCreators } from 'redux';\nimport * as actions from '../public/src/actions/index';\nimport { LocalStorageCheckForThis, LocalStorageGetData, LocalStorageRemoveItem } from '../localStorageOptions';\nimport LoginPage from '../public/src/pages/containers/login';\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    _classCallCheck(this, Login);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    //aqui no hacemos validaciones de sesion (cookie auth) por que a esta vista se puede entrar sin estar autenticado\n    value: function componentDidMount() {\n      var _this = this;\n\n      //navegation Events\n      Router.onRouteChangeStart = function (url) {\n        console.log('App is changing to: ', url);\n\n        _this.props.actions.showSpinner(true);\n      };\n\n      Router.onRouteChangeComplete = function (url) {\n        console.log('App changed to: ', url);\n\n        _this.props.actions.showSpinner(false);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(LoginPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      });\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nfunction mapStateToProps(state, props) {\n  return {\n    state: state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}\n\nexport default initStore(Login, mapStateToProps, mapDispatchToProps, 'LOGIN');","map":{"version":3,"sources":["D:/www/gits-proyectos/proyecto ERP/ERP V-2/ssr_server/pages/login.js"],"names":["React","Component","initStore","Router","Map","map","bindActionCreators","actions","LocalStorageCheckForThis","LocalStorageGetData","LocalStorageRemoveItem","LoginPage","Login","onRouteChangeStart","url","console","log","props","showSpinner","onRouteChangeComplete","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,GAAG,IAAIC,GAAhB,QAA2B,WAA3B;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAO,KAAKC,OAAZ,MAAyB,6BAAzB;AACA,SACIC,wBADJ,EAEIC,mBAFJ,EAGIC,sBAHJ,QAIO,wBAJP;AAMA,OAAOC,SAAP,MAAsB,sCAAtB;;IAEMC,K;;;;;;;;;;;;;AACF;wCACoB;AAAA;;AAChB;AACAT,MAAAA,MAAM,CAACU,kBAAP,GAA4B,UAAAC,GAAG,EAAI;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC;;AACA,QAAA,KAAI,CAACG,KAAL,CAAWV,OAAX,CAAmBW,WAAnB,CAA+B,IAA/B;AACH,OAHD;;AAIAf,MAAAA,MAAM,CAACgB,qBAAP,GAA+B,UAAAL,GAAG,EAAI;AAClCC,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,GAAhC;;AACA,QAAA,KAAI,CAACG,KAAL,CAAWV,OAAX,CAAmBW,WAAnB,CAA+B,KAA/B;AACH,OAHD;AAIH;;;6BACQ;AACL,aAAQ,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;;;EAfejB,S;;AAkBpB,SAASmB,eAAT,CAAyBC,KAAzB,EAAgCJ,KAAhC,EAAuC;AACnC,SAAO;AACHI,IAAAA,KAAK,EAALA;AADG,GAAP;AAGH;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AAClC,SAAO;AACHhB,IAAAA,OAAO,EAAED,kBAAkB,CAACC,OAAD,EAAUgB,QAAV;AADxB,GAAP;AAGH;;AAED,eAAerB,SAAS,CAACU,KAAD,EAAQQ,eAAR,EAAyBE,kBAAzB,EAA6C,OAA7C,CAAxB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { initStore } from '../store';\r\nimport Router from 'next/router';\r\nimport { Map as map } from 'immutable';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as actions from '../public/src/actions/index';\r\nimport {\r\n    LocalStorageCheckForThis,\r\n    LocalStorageGetData,\r\n    LocalStorageRemoveItem\r\n} from '../localStorageOptions';\r\n\r\nimport LoginPage from '../public/src/pages/containers/login';\r\n\r\nclass Login extends Component {\r\n    //aqui no hacemos validaciones de sesion (cookie auth) por que a esta vista se puede entrar sin estar autenticado\r\n    componentDidMount() {\r\n        //navegation Events\r\n        Router.onRouteChangeStart = url => {\r\n            console.log('App is changing to: ', url);\r\n            this.props.actions.showSpinner(true);\r\n        }\r\n        Router.onRouteChangeComplete = url => {\r\n            console.log('App changed to: ', url);\r\n            this.props.actions.showSpinner(false);\r\n        }\r\n    }\r\n    render() {\r\n        return (<LoginPage />)\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n    return {\r\n        state\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    }\r\n}\r\n\r\nexport default initStore(Login, mapStateToProps, mapDispatchToProps, 'LOGIN')"]},"metadata":{},"sourceType":"module"}