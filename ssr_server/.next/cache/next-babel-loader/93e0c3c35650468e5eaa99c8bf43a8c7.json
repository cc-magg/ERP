{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(getMetrics),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(getUserAccess),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(getProfesors),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(actionsWatcher),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(mySaga);\n\nimport { call, put, takeEvery, takeLatest, all } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { Map as map } from 'immutable';\nimport { login } from '../../../utils/auth';\nimport { CALL_METRICS, CALL_USER_ACCESS, CALL_PROFESORS } from '../action-types/index.js';\nimport { setApiData, saveUserAccess, saveLoginError, saveProfesors, saveUserTokenAndDeleteOldErrors } from '../actions/index.js';\nimport token from '../../../config';\nimport Cookies from 'js-cookie';\nexport function getMetrics(action) {\n  var headers, response;\n  return _regeneratorRuntime.wrap(function getMetrics$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          headers = {\n            method: 'GET',\n            mode: 'no-cors',\n            headers: {\n              'Authorization': \"Bearer \".concat(token.apiToken),\n              // Need to get from store once login done\n              'Content-Type': 'application/json'\n            }\n          };\n          _context.next = 4;\n          return call(axios.get, \"http://localhost:8080/metrics/\".concat(action.payload.uuid, \"/\").concat(action.payload.type), headers);\n\n        case 4:\n          response = _context.sent;\n          _context.next = 7;\n          return put(setApiData(response.data));\n\n        case 7:\n          _context.next = 12;\n          break;\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](0);\n          console.log('Request failed at metrics¡¡ error: ' + _context.t0);\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 9]]);\n}\nexport function getUserAccess(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function getUserAccess$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(axios.get, \"http://localhost:8080/login/\".concat(action.payload.user, \"/\").concat(action.payload.password));\n\n        case 3:\n          response = _context2.sent;\n          _context2.next = 6;\n          return put(response.data.error ? saveLoginError(response.data.error) : saveUserTokenAndDeleteOldErrors(response.data.newUserToken));\n\n        case 6:\n          _context2.next = 11;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log('Request failed¡¡ error: ' + _context2.t0);\n\n        case 11:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\nexport function getProfesors(action) {\n  var response;\n  return _regeneratorRuntime.wrap(function getProfesors$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(axios.post, \"http://localhost:5678/graphql\", {\n            query: 'query Profesores{profesores {id,nombre,nacionalidad,genero,cursos {titulo,id}}}'\n          });\n\n        case 3:\n          response = _context3.sent;\n          _context3.next = 6;\n          return put(saveProfesors(map(response.data.data)));\n\n        case 6:\n          _context3.next = 11;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log('Request failed¡¡ error: ' + _context3.t0);\n\n        case 11:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\nexport function actionsWatcher() {\n  return _regeneratorRuntime.wrap(function actionsWatcher$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return all([takeEvery(CALL_METRICS, getMetrics), takeEvery(CALL_USER_ACCESS, getUserAccess), takeEvery(CALL_PROFESORS, getProfesors)]);\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\nexport default function mySaga() {\n  return _regeneratorRuntime.wrap(function mySaga$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return all([actionsWatcher()]);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}","map":{"version":3,"sources":["D:/www/gits-proyectos/proyecto ERP/ERP V-2/ssr_server/public/src/sagas/index.js"],"names":["getMetrics","getUserAccess","getProfesors","actionsWatcher","mySaga","call","put","takeEvery","takeLatest","all","axios","Map","map","login","CALL_METRICS","CALL_USER_ACCESS","CALL_PROFESORS","setApiData","saveUserAccess","saveLoginError","saveProfesors","saveUserTokenAndDeleteOldErrors","token","Cookies","action","headers","method","mode","apiToken","get","payload","uuid","type","response","data","console","log","user","password","error","newUserToken","post","query"],"mappings":"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","sourcesContent":["import { call, put, takeEvery, takeLatest, all } from 'redux-saga/effects';\r\nimport axios from 'axios';\r\nimport { Map as map } from 'immutable';\r\n\r\nimport { login } from '../../../utils/auth';\r\nimport { CALL_METRICS, CALL_USER_ACCESS, CALL_PROFESORS } from '../action-types/index.js';\r\nimport { setApiData, saveUserAccess, saveLoginError, saveProfesors, saveUserTokenAndDeleteOldErrors } from '../actions/index.js';\r\n\r\nimport token from '../../../config';\r\n\r\nimport Cookies from 'js-cookie';\r\n\r\nexport function* getMetrics(action) {\r\n    try {\r\n        const headers = {\r\n            method: 'GET',\r\n            mode: 'no-cors',\r\n            headers: {\r\n                'Authorization': `Bearer ${token.apiToken}`, // Need to get from store once login done\r\n                'Content-Type': 'application/json'\r\n            },\r\n        };\r\n        const response = yield call(axios.get, `http://localhost:8080/metrics/${action.payload.uuid}/${action.payload.type}`, headers);\r\n\r\n        yield put(setApiData(response.data));\r\n    } catch (error) {\r\n        console.log('Request failed at metrics¡¡ error: ' + error);\r\n    }\r\n}\r\nexport function* getUserAccess(action) {\r\n    try {\r\n        const response = yield call(axios.get, `http://localhost:8080/login/${action.payload.user}/${action.payload.password}`);\r\n\r\n        //if(response.data) login(response.data.newUserToken);\r\n        //yield put(saveUserAccess(map(response.data)));\r\n        //console.log('resultado', response.data);\r\n\r\n        yield put((response.data.error)? saveLoginError(response.data.error) : saveUserTokenAndDeleteOldErrors(response.data.newUserToken));\r\n    } catch (error) {\r\n        console.log('Request failed¡¡ error: ' + error);\r\n    }\r\n}\r\nexport function* getProfesors(action) {\r\n    try {\r\n        const response = yield call(axios.post, `http://localhost:5678/graphql`, { query: 'query Profesores{profesores {id,nombre,nacionalidad,genero,cursos {titulo,id}}}' });\r\n\r\n        yield put(saveProfesors(map(response.data.data)));\r\n    } catch (error) {\r\n        console.log('Request failed¡¡ error: ' + error);\r\n    }\r\n}\r\n\r\nexport function* actionsWatcher() {\r\n    yield all([\r\n        takeEvery(CALL_METRICS, getMetrics),\r\n        takeEvery(CALL_USER_ACCESS, getUserAccess),\r\n        takeEvery(CALL_PROFESORS, getProfesors)\r\n    ])\r\n}\r\n\r\nexport default function* mySaga() {\r\n    yield all([\r\n        actionsWatcher()\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}