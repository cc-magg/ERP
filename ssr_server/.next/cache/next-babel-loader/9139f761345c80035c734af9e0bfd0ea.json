{"ast":null,"code":"import { fromJS } from 'immutable';\nimport { SAVE_USER_ACCESS, REMOVE_USER_ACCESS, SAVE_LOGIN_ERROR, SAVE_NEW_USER_ACCESS } from '../action-types/index.js';\nimport { login } from '../../../utils/auth';\nimport { LocalStorageAddItem, LocalStorageRemoveItem } from '../../../localStorageOptions';\nconst initialState = fromJS({\n  access: {},\n  error: ''\n});\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case SAVE_NEW_USER_ACCESS:\n      {\n        return state.merge({\n          access: action.payload.userAccess,\n          error: ''\n        });\n      }\n\n    case SAVE_USER_ACCESS:\n      {\n        //here we also save it in the localstorage of the browser\n        //LocalStorageAddItem('access', JSON.stringify(action.payload.userAccess));\n        return state.set('access', action.payload.userAccess);\n      }\n\n    case SAVE_LOGIN_ERROR:\n      {\n        if (action.payload.error) {\n          return state.set('error', action.payload.error);\n        }\n\n        return null;\n      }\n\n    case REMOVE_USER_ACCESS:\n      {\n        LocalStorageRemoveItem('access');\n        return state.set('access', '');\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":{"version":3,"sources":["D:/www/gits-proyectos/proyecto ERP/ERP V-2/ssr_server/public/src/reducers/user.js"],"names":["fromJS","SAVE_USER_ACCESS","REMOVE_USER_ACCESS","SAVE_LOGIN_ERROR","SAVE_NEW_USER_ACCESS","login","LocalStorageAddItem","LocalStorageRemoveItem","initialState","access","error","user","state","action","type","merge","payload","userAccess","set"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB;AACA,SAASC,gBAAT,EAA2BC,kBAA3B,EAA+CC,gBAA/C,EAAiEC,oBAAjE,QAA6F,0BAA7F;AACA,SAASC,KAAT,QAAsB,qBAAtB;AAEA,SAASC,mBAAT,EAA8BC,sBAA9B,QAA4D,8BAA5D;AAEA,MAAMC,YAAY,GAAGR,MAAM,CAAC;AACxBS,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,KAAK,EAAE;AAFiB,CAAD,CAA3B;;AAKA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKV,oBAAL;AAA2B;AACvB,eAAOQ,KAAK,CAACG,KAAN,CAAY;AAACN,UAAAA,MAAM,EAAEI,MAAM,CAACG,OAAP,CAAeC,UAAxB;AAAoCP,UAAAA,KAAK,EAAE;AAA3C,SAAZ,CAAP;AACH;;AACD,SAAKT,gBAAL;AAAuB;AACnB;AACA;AACA,eAAOW,KAAK,CAACM,GAAN,CAAU,QAAV,EAAoBL,MAAM,CAACG,OAAP,CAAeC,UAAnC,CAAP;AACH;;AACD,SAAKd,gBAAL;AAAuB;AACnB,YAAGU,MAAM,CAACG,OAAP,CAAeN,KAAlB,EAAyB;AACrB,iBAAOE,KAAK,CAACM,GAAN,CAAU,OAAV,EAAmBL,MAAM,CAACG,OAAP,CAAeN,KAAlC,CAAP;AACH;;AACD,eAAO,IAAP;AACH;;AACD,SAAKR,kBAAL;AAAyB;AACrBK,QAAAA,sBAAsB,CAAC,QAAD,CAAtB;AACA,eAAOK,KAAK,CAACM,GAAN,CAAU,QAAV,EAAoB,EAApB,CAAP;AACH;;AACD;AAAS,aAAON,KAAP;AAnBb;AAqBH,CAtBD;;AAwBA,eAAeD,IAAf","sourcesContent":["import { fromJS } from 'immutable';\r\nimport { SAVE_USER_ACCESS, REMOVE_USER_ACCESS, SAVE_LOGIN_ERROR, SAVE_NEW_USER_ACCESS } from '../action-types/index.js';\r\nimport { login } from '../../../utils/auth';\r\n\r\nimport { LocalStorageAddItem, LocalStorageRemoveItem } from '../../../localStorageOptions';\r\n\r\nconst initialState = fromJS({\r\n    access: {},\r\n    error: ''\r\n});\r\n\r\nconst user = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_NEW_USER_ACCESS: {\r\n            return state.merge({access: action.payload.userAccess, error: ''});\r\n        }\r\n        case SAVE_USER_ACCESS: {\r\n            //here we also save it in the localstorage of the browser\r\n            //LocalStorageAddItem('access', JSON.stringify(action.payload.userAccess));\r\n            return state.set('access', action.payload.userAccess);\r\n        }\r\n        case SAVE_LOGIN_ERROR: {\r\n            if(action.payload.error) {\r\n                return state.set('error', action.payload.error);\r\n            }\r\n            return null;\r\n        }\r\n        case REMOVE_USER_ACCESS: {\r\n            LocalStorageRemoveItem('access');\r\n            return state.set('access', '');\r\n        }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default user;"]},"metadata":{},"sourceType":"module"}