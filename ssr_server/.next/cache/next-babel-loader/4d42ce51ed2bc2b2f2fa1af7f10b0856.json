{"ast":null,"code":"var _jsxFileName = \"D:\\\\www\\\\gits-proyectos\\\\proyecto ERP\\\\ERP V-2\\\\ssr_server\\\\public\\\\src\\\\components\\\\form-login\\\\containers\\\\formLogin.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Form from '../components/form.js';\nimport * as actions from '../../../actions/index.js';\nimport Router from 'next/router';\nimport { Alert, Collapse, Well, Button, Panel } from 'react-bootstrap';\n\nclass FormContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      showAlert: false,\n      alertContent: '',\n      type: '',\n      detectedToken: ''\n    });\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      event.preventDefault();\n      console.log('dio submit userName: ' + this.userName.value + ' password: ' + this.password.value);\n\n      if (this.userName.value != '' && this.password.value != '') {\n        this.setState({\n          showAlert: false\n        });\n        this.userName.value.replace(\" \", \"%20\");\n        this.password.value.replace(\" \", \"%20\");\n        this.props.actions.callUserAccess(this.userName.value, this.password.value);\n      } else {\n        //alert('Por favor ingresar todos los datos¡¡');\n        this.setState({\n          showAlert: true,\n          alertContent: 'Por favor ingresar TODOS los datos',\n          type: 'warning'\n        });\n      }\n    });\n\n    _defineProperty(this, \"setRef\", element => {\n      if (element != null) {\n        if (element.name == 'userName') {\n          this.userName = element;\n        } else {\n          this.password = element;\n        }\n      }\n    });\n  }\n\n  render() {\n    const wellStyles = {\n      maxWidth: 400,\n      margin: '0 auto 10px'\n    };\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 16\n      }\n    }, __jsx(Form, {\n      handleSubmit: this.handleSubmit,\n      setRef: this.setRef,\n      baseColor: this.props.baseColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }), this.state.showAlert ? __jsx(Alert, {\n      bsStyle: this.state.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 38\n      }\n    }, this.state.alertContent) : this.props.error && __jsx(Alert, {\n      bsStyle: \"danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 128\n      }\n    }, this.props.error));\n  }\n\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(actions, dispatch)\n  };\n}\n\nfunction mapStateToProps(state, props) {\n  let access = state.get('user').get('access');\n  let error = state.get('user').get('error');\n  return {\n    error\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);","map":{"version":3,"sources":["D:/www/gits-proyectos/proyecto ERP/ERP V-2/ssr_server/public/src/components/form-login/containers/formLogin.js"],"names":["React","Component","connect","bindActionCreators","Form","actions","Router","Alert","Collapse","Well","Button","Panel","FormContainer","showAlert","alertContent","type","detectedToken","event","preventDefault","console","log","userName","value","password","setState","replace","props","callUserAccess","element","name","render","wellStyles","maxWidth","margin","handleSubmit","setRef","baseColor","state","error","mapDispatchToProps","dispatch","mapStateToProps","access","get"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport Form from '../components/form.js';\r\nimport * as actions from '../../../actions/index.js';\r\nimport Router from 'next/router';\r\nimport { Alert, Collapse, Well, Button, Panel } from 'react-bootstrap';\r\n\r\nclass FormContainer extends Component {\r\n    state = {\r\n        showAlert: false,\r\n        alertContent: '',\r\n        type: '',\r\n        detectedToken: ''\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        console.log('dio submit userName: '+this.userName.value+' password: '+this.password.value);\r\n        if(this.userName.value != '' && this.password.value != '') {\r\n            this.setState({showAlert: false});\r\n            this.userName.value.replace(\" \", \"%20\");\r\n            this.password.value.replace(\" \", \"%20\");\r\n            this.props.actions.callUserAccess(this.userName.value, this.password.value);\r\n        } else {\r\n            //alert('Por favor ingresar todos los datos¡¡');\r\n            this.setState({\r\n                showAlert: true,\r\n                alertContent: 'Por favor ingresar TODOS los datos',\r\n                type: 'warning'\r\n            });\r\n        }\r\n    }\r\n    setRef = element => {\r\n        if(element != null) {\r\n            if(element.name == 'userName'){\r\n                this.userName = element\r\n            } else {\r\n                this.password = element\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        const wellStyles = { maxWidth: 400, margin: '0 auto 10px' };\r\n        \r\n        return <div>\r\n            <Form \r\n                handleSubmit={this.handleSubmit}\r\n                setRef={this.setRef}\r\n                baseColor={this.props.baseColor}\r\n            />\r\n            {(this.state.showAlert)? <Alert bsStyle={this.state.type}>{this.state.alertContent}</Alert> : (this.props.error)&& <Alert bsStyle=\"danger\">{this.props.error}</Alert> }\r\n        </div>\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        actions: bindActionCreators(actions, dispatch)\r\n    }\r\n}\r\nfunction mapStateToProps(state, props) {\r\n    let access = state.get('user').get('access');\r\n    let error = state.get('user').get('error');\r\n\r\n    return {\r\n        error\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);"]},"metadata":{},"sourceType":"module"}