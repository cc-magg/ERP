{"ast":null,"code":"import { fromJS } from 'immutable'; //import data\n\nimport apiData from '../api.json'; //import normalizedData from '../schemas/index.js';\n\nimport { ADD_NEW_MESSAGE } from '../action-types/index.js';\nvar initialState = fromJS({\n  /*entities: normalizedData.entities,\r\n  categories: normalizedData.result.categories,*/\n  message: apiData.message,\n  userMessage: '',\n  userID: ''\n});\n\nvar data = function data() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  //que hago con el estado segun la accion\n  switch (action.type) {\n    case ADD_NEW_MESSAGE:\n      {\n        console.log('mensaje: ' + action.payload.query + ' id: ' + action.payload.userID);\n        return state.merge({\n          userMessage: action.payload.message,\n          userID: action.payload.userID\n        });\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default data;","map":{"version":3,"sources":["D:/www/gits-proyectos/proyecto ERP/ERP V-2/ssr_server/public/src/reducers/data.js"],"names":["fromJS","apiData","ADD_NEW_MESSAGE","initialState","message","userMessage","userID","data","state","action","type","console","log","payload","query","merge"],"mappings":"AAAA,SAASA,MAAT,QAAuB,WAAvB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,aAApB,C,CACA;;AAEA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,IAAMC,YAAY,GAAGH,MAAM,CAAC;AACxB;;AAEAI,EAAAA,OAAO,EAAEH,OAAO,CAACG,OAHO;AAIxBC,EAAAA,WAAW,EAAE,EAJW;AAKxBC,EAAAA,MAAM,EAAE;AALgB,CAAD,CAA3B;;AAQA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC3C;AACA,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,eAAL;AAAsB;AAClBS,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAYH,MAAM,CAACI,OAAP,CAAeC,KAA3B,GAAiC,OAAjC,GAAyCL,MAAM,CAACI,OAAP,CAAeP,MAApE;AACA,eAAOE,KAAK,CAACO,KAAN,CAAY;AAACV,UAAAA,WAAW,EAAEI,MAAM,CAACI,OAAP,CAAeT,OAA7B;AAAsCE,UAAAA,MAAM,EAAEG,MAAM,CAACI,OAAP,CAAeP;AAA7D,SAAZ,CAAP;AACH;;AACD;AAAQ,aAAOE,KAAP;AALZ;AAOH,CATD;;AAWA,eAAeD,IAAf","sourcesContent":["import { fromJS } from 'immutable';\r\n//import data\r\nimport apiData from '../api.json';\r\n//import normalizedData from '../schemas/index.js';\r\n\r\nimport { ADD_NEW_MESSAGE } from '../action-types/index.js';\r\n\r\nconst initialState = fromJS({\r\n    /*entities: normalizedData.entities,\r\n    categories: normalizedData.result.categories,*/\r\n    message: apiData.message,\r\n    userMessage: '',\r\n    userID: ''\r\n});\r\n\r\nconst data = (state = initialState, action) => {\r\n    //que hago con el estado segun la accion\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE: {\r\n            console.log('mensaje: '+action.payload.query+' id: '+action.payload.userID);\r\n            return state.merge({userMessage: action.payload.message, userID: action.payload.userID})\r\n        }\r\n        default:return state;\r\n    }\r\n};\r\n\r\nexport default data;"]},"metadata":{},"sourceType":"module"}